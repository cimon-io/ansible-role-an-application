---
- import_tasks: requirements.yml
  tags: [application, application-install]

- name: "Get the current time for a timestamp"
  command: "date +%Y%m%d-%H%M%S"
  register: timestamp
  tags: [application-deploy, application]

- name: "Create main application directory"
  file:
    path: "{{ application_prefix }}/{{ application_name }}"
    state: directory
    owner: "{{ application_user }}"
    group: "{{ application_group }}"
    mode: 0775
  become: True
  tags: [application]

- name: "Create application directories"
  file:
    path: "{{ application_prefix }}/{{ application_name }}/{{ item }}"
    state: directory
    owner: "{{ application_user }}"
    group: "{{ application_group }}"
    mode: 0775
  with_items:
    - releases
    - shared
  become: True
  tags: [application]

- name: "Get list of previous releases"
  shell: "ls -t {{ application_prefix }}/{{ application_name }}/releases | tail -n +{{ application_keep_versions }}"
  args:
    executable: /bin/bash
  register: release_dirs
  become: True
  become_user: "{{ application_user }}"
  tags: [application, application-deploy, application-cleanup]

- name: "Create additional shared directories"
  file:
    path: "{{ application_prefix }}/{{ application_name }}/shared/{{ item.src }}"
    state: directory
    owner: "{{ application_user }}"
    group: "{{ application_group }}"
    mode: 0775
  when: item.dir is defined
  with_items: "{{ application_shared }}"
  become: True
  tags: [application-deploy, application]

- import_tasks: environ.yml
  when: application_environment | length > 0
  tags: [application-deploy, application-env, application]

- name: "Create application directory"
  file:
    path: "{{ application_prefix }}/{{ application_name }}/releases/{{ timestamp.stdout }}"
    state: directory
    owner: "{{ application_user }}"
    group: "{{ application_group }}"
    mode: 0775
  become: True
  tags: [application-deploy, application]

- import_tasks: storages/git.yml
  when: application_repository | length > 0
  tags: [application-deploy, application]

- import_tasks: storages/http.yml
  when: application_url | length > 0
  tags: [application-deploy, application]

- import_tasks: storages/s3.yml
  when: application_s3_bucket | length > 0
  tags: [application-deploy, application]

- name: "Link shared resources to the application"
  file:
    src: "{{ application_prefix }}/{{ application_name }}/shared/{{ item.src }}"
    dest: "{{ application_prefix }}/{{ application_name }}/releases/{{ timestamp.stdout }}/{{ item.dest }}"
    state: link
    force: yes
  notify: restart application
  when: item.dest is defined
  become: True
  become_user: "{{ application_user }}"
  with_items: "{{ application_shared }}"
  tags: [application-deploy, application]

- name: "Create VERSION file"
  template:
    src: version.j2
    dest: "{{ application_prefix }}/{{ application_name }}/releases/{{ timestamp.stdout }}/VERSION"
    force: no
  when: application_release_version | length > 0
  become: True
  become_user: "{{ application_user }}"
  tags: [application-deploy, application]

- name: "Prepare the application"
  shell: "/bin/bash -lc '{{ item }}'"
  args:
    chdir: "{{ application_prefix }}/{{ application_name }}/releases/{{ timestamp.stdout }}"
  notify: restart application
  become: True
  become_user: "{{ application_user }}"
  with_items: "{{ application_prepare }}"
  tags: [application-deploy, application]

- name: "Link deployed application to current directory"
  file:
    src: "{{ application_prefix }}/{{ application_name }}/releases/{{ timestamp.stdout }}"
    dest: "{{ application_prefix }}/{{ application_name }}/current"
    state: link
    force: yes
  notify: restart application
  become: True
  become_user: "{{ application_user }}"
  tags: [application-deploy, application]

- name: "Cleanup"
  file:
    name: "{{ application_prefix }}/{{ application_name }}/releases/{{ item }}"
    state: absent
  with_items: "{{ release_dirs.stdout_lines }}"
  when: release_dirs.stdout | length > 0
  become: True
  become_user: "{{ application_user }}"
  tags: [application-deploy, application, application-cleanup]
